{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-account/add-account.component.ts","./src/app/components/add-account/add-account.component.html","./src/app/components/dialog/confirm-message-dialog/confirm-message-dialog.component.ts","./src/app/components/dialog/confirm-message-dialog/confirm-message-dialog.component.html","./src/app/components/dialog/message-dialog/message-dialog.component.ts","./src/app/components/dialog/message-dialog/message-dialog.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/logout/logout.component.ts","./src/app/components/my-transaction/my-transaction.component.ts","./src/app/components/my-transaction/my-transaction.component.html","./src/app/components/open-account/open-account.component.ts","./src/app/components/open-account/open-account.component.html","./src/app/components/transaction/transaction.component.ts","./src/app/components/transaction/transaction.component.html","./src/app/components/transfer/transfer.component.ts","./src/app/components/transfer/transfer.component.html","./src/app/model/AccountModel.ts","./src/app/model/LoginModel.ts","./src/app/model/TransactionModel.ts","./src/app/model/UserModel.ts","./src/app/security/AuthInterceptor.ts","./src/app/services/account.service.ts","./src/app/services/dialog/confirm-message-dialog.service.ts","./src/app/services/dialog/message-dialog.service.ts","./src/app/services/ping-service/ping.service.ts","./src/app/services/register-service/register.service.ts","./src/app/services/security/authentication.service.ts","./src/app/services/transaction.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { OpenAccountComponent } from './components/open-account/open-account.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\nimport { TransactionComponent } from './components/transaction/transaction.component';\nimport { AddAccountComponent } from './components/add-account/add-account.component';\nimport { MyTransactionComponent } from './components/my-transaction/my-transaction.component';\n\n\nconst routes: Routes = [\n  {path:\"login\", component:LoginComponent},\n  {path:\"logout\", component:LogoutComponent},\n  {path:\"register\", component:OpenAccountComponent},\n  {path:\"transfer\", component:TransferComponent},\n  {path:\"transaction\", component:TransactionComponent},\n  {path:\"addAccount\", component:AddAccountComponent},\n  {path:\"myTransaction\", component:MyTransactionComponent},\n  {path:'', redirectTo:'/login', pathMatch:\"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './services/security/authentication.service';\nimport { PingService } from './services/ping-service/ping.service';\nimport { interval } from 'rxjs';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lti-citi-app-ui'; \n  constructor(public authService: AuthenticationService, private pingService: PingService){\n    const secondsCounter = interval(900000); //every 15 minutes\n    // Subscribe to begin publishing values\n    secondsCounter.subscribe(\n      (n) =>\n        {\n          this.pingService.getProfileUp().subscribe();\n          this.pingService.getTransactionUp().subscribe();\n          this.pingService.getAccountUp().subscribe(); \n\n          console.log(`It's been ${n} seconds since subscribing!`);\n        }\n      );\n  }\n\n\n}\n","\n<div class=\"topnav\" id=\"myTopnav\"> \n  <span *ngIf=\"authService.isUserLoggedIn()\">\n    <button mat-button routerLink=\"logout\" routerLinkActive=\"active\"> \n      <span>Log out</span>\n    </button>\n  </span>\n  <span *ngIf=\"!(authService.isUserLoggedIn())\">\n    <button mat-button routerLink=\"login\" routerLinkActive=\"active\"> \n      <span>Login</span>\n    </button>\n  </span> \n  <span *ngIf=\"!(authService.isUserLoggedIn())\">\n    <button mat-button routerLink=\"register\" routerLinkActive=\"active\"> \n      <span>Open Account</span>\n    </button>\n  </span>\n  <span *ngIf=\"authService.isUserLoggedIn()\">\n  <button mat-button routerLink=\"transfer\" routerLinkActive=\"active\"> \n    <span>Transfer Money</span>\n  </button>\n  </span>\n  <span *ngIf=\"authService.isUserLoggedIn()\">\n    <button mat-button routerLink=\"transaction\" routerLinkActive=\"active\"> \n      <span>My Profile</span>\n    </button>\n  </span>\n  <span *ngIf=\"authService.isUserLoggedIn()\">\n    <button mat-button routerLink=\"myTransaction\" routerLinkActive=\"active\"> \n      <span>My Transaction</span>\n    </button>\n  </span>\n</div>\n\n<div class=\"content-area\"> \n  <h1 style=\"display: none;\">Jai Ram G ki</h1>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input'; \nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion'; \nimport {MatDatepickerModule} from '@angular/material/datepicker'; \nimport {MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';  \nimport {MatCardModule} from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { MatSelectModule  } from '@angular/material/select';\nimport {MatTabsModule} from '@angular/material/tabs'; \nimport {MatBadgeModule} from '@angular/material/badge';  \nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core'; \nimport {MatRadioModule} from '@angular/material/radio';\nimport { AuthInterceptor } from './security/AuthInterceptor';\nimport { LoginComponent } from './components/login/login.component';\nimport { OpenAccountComponent } from './components/open-account/open-account.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { TransactionComponent } from './components/transaction/transaction.component';\nimport { MessageDialogComponent } from './components/dialog/message-dialog/message-dialog.component';\nimport { AddAccountComponent } from './components/add-account/add-account.component';\nimport { MyTransactionComponent } from './components/my-transaction/my-transaction.component';\nimport { ConfirmMessageDialogComponent } from './components/dialog/confirm-message-dialog/confirm-message-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    OpenAccountComponent,\n    TransferComponent,\n    LogoutComponent,\n    TransactionComponent,\n    MessageDialogComponent,\n    AddAccountComponent,\n    MyTransactionComponent,\n    ConfirmMessageDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatCardModule,\n    FormsModule, ReactiveFormsModule,\n    HttpClientModule ,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatProgressBarModule,\n    MatNativeDateModule, \n    MatRippleModule,\n    MatRadioModule\n  ],\n  providers: [\n  { \n    provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, \n    useValue: { appearance: 'fill' } \n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  },],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { RegisterService } from 'src/app/services/register-service/register.service';\nimport { MessageDialogService } from 'src/app/services/dialog/message-dialog.service';\nimport { AccountModel } from 'src/app/model/AccountModel';\n\n@Component({\n  selector: 'app-add-account',\n  templateUrl: './add-account.component.html',\n  styleUrls: ['./add-account.component.css']\n})\nexport class AddAccountComponent implements OnInit {\n\n  addForm: FormGroup; \n  account: any;\n  constructor(private formBuilder: FormBuilder, private registerService: RegisterService, private dialogService: MessageDialogService) { \n    this.validateForm();\n  } \n\n  ngOnInit(): void {\n  }\n\n  validateForm(){\n    this.addForm = this.formBuilder.group({ \n      \"accountType\": new FormControl(),\n      \"initialValue\": new FormControl()\n    });\n  }\n \n  doRegister(){  \n    let accountValue: AccountModel = new AccountModel(\n      \"\", //will be generated by server\n      this.addForm.controls['accountType'].value,\n      this.addForm.controls['initialValue'].value,\n      sessionStorage.getItem(\"userId\"),\n      \"\",\n      \"\"\n  ); \n     \n        this.registerService.createAccount(accountValue).subscribe(\n          (success) => {\n            this.account = success; \n            let options = {\n              title: 'Add Account',\n              message1: \"Account created successfully!\",\n              message2: \"Account# : \"+this.account.accountId,\n              cancelText: 'Ok',\n              confirmText: 'Ok'\n            };\n      \n            this.dialogService.open(options);\n            \n            this.dialogService.confirmed().subscribe(confirmed => {\n              if (confirmed) {\n                  //alert(\"Jai Ram G ki\");\n                  //After clicking Ok on message dialog, form should reset\n                  this.addForm.reset();\n                }\n              });\n          },\n          (err) => {\n            let options = {\n              title: 'Open Account - error',\n              message1: err.error.message,\n              message2: \"\",\n              cancelText: 'Ok',\n              confirmText: 'Ok'\n            };\n          }\n        );\n  }\n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"doRegister()\">\n      <div class=\"row large-box mat-elevation-z3\" style=\"width: 100%;\">\n        <mat-card class=\"header\"> \n          <mat-card-title>Open Account</mat-card-title>  \n        </mat-card>\n<div class=\"col-md-6\">\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Account Type</mat-label>\n        <mat-select [formControl]=\"addForm.controls['accountType']\" required> \n            <mat-option value=\"SAVINGS\" >SAVINGS</mat-option>\n            <mat-option value=\"CHECKING\" >CHECKING</mat-option>\n            <mat-option value=\"MONEYMARKET\" >MONEYMARKET</mat-option>\n        </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-md-6\">\n    \n    <p>\n    <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n      <mat-label>Initial Amount</mat-label>\n      <input matInput placeholder=\"Initial Amount\" name = \"initialValue\" [formControl] = \"addForm.controls['initialValue']\"/>\n    </mat-form-field>\n    </p>\n\n  </div>\n\n  <div class=\"col-md-12\"  style=\"align-content: left;\">\n    <span matTooltip=\"Fill registration form to enable\">\n    <button type=\"submit\" mat-raised-button [disabled]=\"!addForm.valid\">\n      <mat-icon color=\"accent\">person</mat-icon>\n      <span>Register</span>\n      \n    </button>\n    </span> \n  </div>\n\n    </div>\n</form>\n</div>","import { Component, OnInit, HostListener, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-message-dialog',\n  templateUrl: './confirm-message-dialog.component.html',\n  styleUrls: ['./confirm-message-dialog.component.css']\n})\nexport class ConfirmMessageDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {\n    cancelText: string,\n    confirmText: string,\n    message1: string,\n    message2: string,\n    title: string \n  }, private mdDialogRef: MatDialogRef<ConfirmMessageDialogComponent>) { \n    \n  } \n\n  ngOnInit(): void {\n  }\n \n  public cancel() {  \n    this.close(false);\n  }\n  public close(value) {  \n    this.mdDialogRef.close(value);\n  }\n  \n  public confirm() {  \n    this.close(true);\n  }\n  \n@HostListener(\"keydown.esc\")\n  public onEsc() { \n    this.close(false);\n  }\n\n}\n","\n<div class=\"header\" style=\"width: 400px;\">\n    <h1 mat-dialog-title>{{data.title}}</h1>\n</div>\n<hr/>\n<div mat-dialog-content style=\"height: 100px;\">\n   \n      <span style=\"color: red; margin-left: 18px;\">{{data.message1}}</span>\n      <br><br>\n      <span style=\"margin-left: 18px;\">{{data.message2}}</span>\n</div>\n\n<div mat-dialog-actions>\n    \n    <button mat-raised-button (click)=\"confirm()\">{{ data.confirmText }}</button>\n    <button mat-raised-button (click)=\"cancel()\">{{ data.cancelText }}</button>\n     \n</div> ","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-message-dialog',\n  templateUrl: './message-dialog.component.html',\n  styleUrls: ['./message-dialog.component.css']\n})\nexport class MessageDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {\n    cancelText: string, \n    confirmText: string,\n    message1: string,\n    message2: string,\n    title: string\n  }, private mdDialogRef: MatDialogRef<MessageDialogComponent>) { }\n\n  ngOnInit(): void {\n  } \n  public cancel() {\n    this.close(false);\n  }\n  public close(value) {\n    this.mdDialogRef.close(value);\n  }\n  public confirm() {\n      this.close(true);\n  }\n  @HostListener(\"keydown.esc\")\n  public onEsc() {\n    this.close(false);\n  }\n\n}\n","<div class=\"header\">\n    <h1 mat-dialog-title>{{ data.title }}</h1>\n</div>\n<hr/>\n<div mat-dialog-content>\n    <p class=\"dialog-message\" style=\"color: red;\">{{ data.message1 }}</p> \n    <p>&nbsp;</p>\n    <p class=\"dialog-message\">{{ data.message2 }}</p> \n</div>\n\n<div mat-dialog-actions>\n    <!--\n    <button mat-raised-button (click)=\"cancel()\">{{ data.cancelText }}</button>\n    <button class=\"btn\" (click)=\"confirm()\">{{ data.confirmText }}</button>\n    -->\n    <button mat-raised-button (click)=\"confirm()\">Ok</button>\n</div> \n \n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/services/security/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  \n  mobile: FormControl;\n  password: FormControl;\n  loginFormGroup: FormGroup;\n  user: any; \n\n  constructor(public formBuilder: FormBuilder, private authService: AuthenticationService) {\n    this.mobile = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', Validators.required);\n    this.loginFormGroup = formBuilder.group({ \n      \"mobile\": this.mobile,\n      \"password\": this.password\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  // code segments for password hide/show functionality starts\n  hide:boolean = true;\n  get emailInput() { \n    return this.mobile.value;\n  }\n\n  get passwordInput() { \n    return this.password.value; \n  } \n// code segments for password hide/show functionality ends\n \n  doLogin(){\n    \n    this.authService.doLogin(this.mobile.value, this.password.value);\n\n  }\n\n}\n","<div class=\"container\"> \n        \n    <div class=\"row col-md-12\"> \n        \n        <mat-card class=\"card\">\n            <mat-card class=\"header\"> \n                <mat-card-title>Login</mat-card-title>  \n           </mat-card> \n           <div class=\"col-md-12\">&nbsp;</div> \n            <!--Post Article stats-->\n            <mat-card-content>\n             \n            <form [formGroup]=\"loginFormGroup\" (ngSubmit)=\"doLogin()\" style=\"padding:5px;\">\n                    <p>\n                        <mat-form-field class=\"login-width\" appearance=\"outline\">\n                            <mat-label>Mobile</mat-label> \n                            <input matInput type=\"number\" [formControl] = \"mobile\"/>\n                            <mat-error *ngIf=\"loginFormGroup.controls['mobile'].hasError('required')\">Mobile number required!</mat-error>  \n                        </mat-form-field> \n                    </p>\n                    <p>\n                        <mat-form-field class=\"login-width\" appearance=\"outline\">\n                            <mat-label>Social Security#</mat-label>\n                            <input matInput placeholder=\"Social Security Number\" [type]=\"hide ? 'password' : 'text'\" [formControl]=\"password\"/>\n                            <mat-icon color=\"accent\" matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                            <mat-error *ngIf=\"loginFormGroup.controls['password'].hasError('required')\">Social Security number required!</mat-error>\n                        </mat-form-field>\n                    </p>\n                    <div class=\"col-md-12\"  style=\"align-content: left;\">\n                        <span matTooltip=\"Provide Mobile & Social Security Number combination to login\">\n                        <button type=\"submit\" mat-raised-button [disabled]=\"!loginFormGroup.valid\"> \n                          <span>Login</span>\n                          \n                        </button>\n                        </span> \n                      </div> \n            </form>\n            </mat-card-content>\n            <mat-card-actions> \n                \n            </mat-card-actions>  \n        </mat-card>\n    </div> \n \n</div> ","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/security/authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private auth: AuthenticationService) {\n    this.auth.doLogOut();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TransactionModel } from 'src/app/model/TransactionModel';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-my-transaction',\n  templateUrl: './my-transaction.component.html',\n  styleUrls: ['./my-transaction.component.css']\n})\nexport class MyTransactionComponent implements OnInit {\n\n  ELEMENT_DATA = new Array<TransactionModel>();\n  dataSource: any;\n  transactions: any;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  displayedColumns: string[] = [\n    'transactionId',\n    'transactionType',\n    'senderAccountId',\n    'receiversAccountId',\n    'amount', \n    //'associatedUserId',\n    'transactionStatus',\n    'transactionTimeStamp'\n  ]; \n\n  constructor(private transactionService: TransactionService) { \n    this.loadData();\n  }\n\n  ngOnInit(): void {\n  }\n\n  loadData(){ \n    this.transactionService.getAllTransaction(sessionStorage.getItem(\"userId\")).subscribe(\n      (result) => {\n        this.transactions = result;  \n        this.parseElement();\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n        this.dataSource.sort = this.sort; \n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => {\n        alert(err.error.message);\n      }\n    );\n  }\n\n  parseElement(){ \n    var i = 0; \n    this.ELEMENT_DATA = new Array<TransactionModel>();\n    for(let data of this.transactions){ \n      this.ELEMENT_DATA[i] = (new TransactionModel(\n        data.transactionId,\n        data.transactionType,\n        data.senderAccountId,\n        data.receiversAccountId,\n        data.amount, \n        data.associatedUserId,\n        data.transactionStatus,\n        data.transactionTimeStamp\n      ));\n        i++;\n    }\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div class=\"container\">  \n    <div class=\"col-md-12\"> &nbsp;</div> \n    <mat-card class=\"header\"> \n        <mat-card-title>Transaction History</mat-card-title>  \n    </mat-card> \n    <div class=\"col-md-12\"> &nbsp;</div> \n\n    <div class=\"row\">\n        <mat-form-field class=\"search-text-full-width\" appearance=\"outline\">  \n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search screen ...\" #input>\n            <mat-icon matPrefix color=\"accent\">search&nbsp;</mat-icon> \n        </mat-form-field> \n        <table mat-table [dataSource]=\"dataSource\" matSort>\n         \n        <ng-container matColumnDef=\"transactionId\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Transaction #</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.transactionId}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"transactionType\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Transaction Type</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.transactionType}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"senderAccountId\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Sender Accoun#</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.senderAccountId}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"receiversAccountId\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Benificier Account#</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.receiversAccountId}} </span>\n            </td> \n        </ng-container>\n\n        <ng-container matColumnDef=\"amount\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Amount</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.amount | currency: 'USD': 'symbol': '1.2-2'}} </span>\n            </td>\n        </ng-container>\n         \n        <ng-container matColumnDef=\"transactionStatus\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>transactionStatus</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\" [ngStyle]=\"{'color':element.transactionStatus=='SUCCESS'?'green':'red'}\">{{element.transactionStatus}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"transactionTimeStamp\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Transaction Date Time</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.transactionTimeStamp | date: 'mediumDate'}} </span>\n            </td>\n        </ng-container> \n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true;\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr> \n        \n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n        </table>\n    </div> \n        \n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons></mat-paginator>\n        \n        <br>\n        <br>  \n        \n</div> \n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { RegisterService } from 'src/app/services/register-service/register.service';\nimport { MessageDialogService } from 'src/app/services/dialog/message-dialog.service';\nimport { UserModel } from 'src/app/model/UserModel';\nimport { AccountModel } from 'src/app/model/AccountModel';\n\n@Component({\n  selector: 'app-open-account',\n  templateUrl: './open-account.component.html',\n  styleUrls: ['./open-account.component.css']\n})\nexport class OpenAccountComponent implements OnInit {\n \n  registerForm: FormGroup; \n  registrationGreetings: any; \n  user: any;\n  account: any;\n\n  constructor(private formBuilder: FormBuilder, private registerService: RegisterService, private dialogService: MessageDialogService) { \n    this.validateForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  validateForm(){\n    this.registerForm = this.formBuilder.group({\n      \"firstName\": new FormControl('',Validators.required),\n      \"lastName\": new FormControl(), \n      \"email\": new FormControl(),\n      \"password\": new FormControl('',[Validators.minLength(3), Validators.required]),\n      \"mobile\": new FormControl('',[Validators.minLength(3), Validators.maxLength(10), Validators.required]),\n      \"location\": new FormControl(),\n      \"accountType\": new FormControl(),\n      \"initialValue\": new FormControl()\n    });\n  }\n\n  // code segments for password hide/show functionality starts\n  hide:boolean = true;\n  get emailInput() { \n    return this.registerForm.controls['email'].value;\n  }\n\n  get passwordInput() { \n    return this.registerForm.controls['password'].value; \n  } \n  // code segments for password hide/show functionality ends\n\n  doRegister(){ \n    let userValues: UserModel = new UserModel(\n        \"\", //initally userId should be null, will be generated by user API\n        this.registerForm.controls['firstName'].value,\n        this.registerForm.controls['lastName'].value,\n        this.registerForm.controls['location'].value,\n        this.registerForm.controls['email'].value,\n        this.registerForm.controls['mobile'].value,\n        this.registerForm.controls['password'].value,\n        null, \n        \"GENERAL\",\n        \"ACTIVE\",\n        \"\", //create tstamp - will be generated by API\n        \"\"  //update tstamp - will be generated by API\n    ); \n\n    let accountValue: AccountModel = new AccountModel(\n      \"\", //will be generated by server\n      this.registerForm.controls['accountType'].value,\n      this.registerForm.controls['initialValue'].value,\n      \"\",\n      \"\",\n      \"\"\n  ); \n    this.registerService.registerUser(userValues).subscribe(\n      (success) => {\n        //return message \n        this.user = success; \n        // proceed the user & account detail to create account with userId\n        accountValue.associatedUserId = this.user.userId;\n\n        this.registerService.createAccount(accountValue).subscribe(\n          (success) => {\n            this.account = success;\n\n            this.registrationGreetings = \"Welcome \"+this.user.firstName+\" \"+this.user.lastName+\"!\";\n      \n            let options = {\n              title: 'Open Account',\n              message1: this.registrationGreetings,\n              message2: \"Account# : \"+this.account.accountId,\n              cancelText: 'Ok',\n              confirmText: 'Ok'\n            };\n      \n            this.dialogService.open(options);\n            \n            this.dialogService.confirmed().subscribe(confirmed => {\n              if (confirmed) {\n                  //alert(\"Jai Ram G ki\");\n                  //After clicking Ok on message dialog, form should reset\n                  this.registerForm.reset();\n                }\n              });\n          },\n          (err) => {\n            let options = {\n              title: 'Open Account - error',\n              message1: err.error.message,\n              message2: \"\",\n              cancelText: 'Ok',\n              confirmText: 'Ok'\n            };\n       \n            this.dialogService.open(options);\n            \n            this.dialogService.confirmed().subscribe(confirmed => {\n              if (confirmed) {\n                   //alert(\"Jai Ram G ki\");\n                   //After clicking Ok on message dialog, form should reset\n                   this.registerForm.controls.email.reset();\n                 }\n               });\n          }\n        );\n      },//end of success\n      (err) => { \n        \n        let options = {\n          title: 'Open Account - error',\n          message1: err.error.message,\n          message2: \"\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n   \n        this.dialogService.open(options);\n        \n      }\n    );\n  }\n\n}\n","<div class=\"container\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"doRegister()\">\n      <div class=\"row large-box mat-elevation-z3\" style=\"width: 100%;\">\n        <mat-card class=\"header\"> \n          <mat-card-title>Open Account</mat-card-title>  \n        </mat-card> \n          <div class=\"col-md-6\">\n            \n                  <p>\n                  <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>First Name</mat-label>\n                    <input matInput placeholder=\"First Name\" name=\"firstName\" [formControl]=\"registerForm.controls['firstName']\" [value]=\"registerForm.controls['firstName'].value | titlecase\" required/>\n                    <mat-error *ngIf=\"registerForm.controls['firstName'].hasError('required')\">\n                        <strong>First</strong> name is mandatory.\n                    </mat-error>\n                  </mat-form-field> \n                  </p>\n            \n          </div>\n          <div class=\"col-md-6\">\n            \n                  <p>\n                  <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n                    <mat-label>Last Name</mat-label>\n                    <input matInput placeholder=\"Last Name\" name = \"lastName\" [formControl]=\"registerForm.controls['lastName']\" />\n                  </mat-form-field>\n                  </p>\n            \n          </div>\n  \n          <div class=\"col-md-4\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Mobile</mat-label>\n              <input matInput type=\"number\" placeholder=\"Mobile\" [formControl]=\"registerForm.controls['mobile']\"/>\n            </mat-form-field>\n            </p>\n  \n          </div>\n          \n          <div class=\"col-md-4\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Social Security#</mat-label>\n              <input matInput placeholder=\"Social Security Number\" [type]=\"hide ? 'password' : 'text'\" name = \"password_\" [formControl]=\"registerForm.controls['password']\" required />\n              <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              <mat-error *ngIf=\"registerForm.controls['password'].hasError('required')\">Social Security# required!</mat-error>\n              <mat-error *ngIf=\"registerForm.controls['password'].hasError('minlength')\">\n                Social Security# should be in minimum 3 charchater \n              </mat-error>\n            </mat-form-field>\n            </p>\n  \n          </div>\n\n          <div class=\"col-md-4\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\"  appearance=\"standard\">\n              <mat-label>Email</mat-label>\n              <input matInput placeholder=\"Email\" name = \"email\" [formControl] = \"registerForm.controls['email']\" />\n                \n              <mat-error *ngIf=\"registerForm.controls['email'].hasError('email') && registerForm.controls['email'].dirty\">\n                  Invalid email.\n              </mat-error>\n          </mat-form-field>\n            </p>\n\n        </div> \n  \n          <div class=\"col-md-12\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Location</mat-label>\n              <input matInput placeholder=\"Location\" name = \"location\" [formControl] = \"registerForm.controls['location']\"/>\n            </mat-form-field>\n            </p>\n  \n          </div>\n\n          <div class=\"col-md-6\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Account Type</mat-label>\n                <mat-select [formControl]=\"registerForm.controls['accountType']\" required> \n                    <mat-option value=\"SAVINGS\" >SAVINGS</mat-option>\n                    <mat-option value=\"CHECKING\" >CHECKING</mat-option>\n                    <mat-option value=\"MONEYMARKET\" >MONEYMARKET</mat-option>\n                </mat-select>\n            </mat-form-field>\n          </div>\n\n          <div class=\"col-md-6\">\n            \n            <p>\n            <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n              <mat-label>Initial Amount</mat-label>\n              <input matInput type=\"number\" placeholder=\"Initial Amount\" name = \"initialValue\" [formControl] = \"registerForm.controls['initialValue']\"/>\n            </mat-form-field>\n            </p>\n  \n          </div>\n  \n          <div class=\"col-md-12\"  style=\"align-content: left;\">\n            <span matTooltip=\"Fill registration form to enable\">\n            <button type=\"submit\" mat-raised-button [disabled]=\"!registerForm.valid\">\n              <mat-icon color=\"accent\">person</mat-icon>\n              <span>Register</span>\n              \n            </button>\n            </span>\n            </div>\n   \n          <div class=\"col-md-12\"  style=\"align-content: center;\">\n            &nbsp;\n          </div>\n     </div>\n   \n   </form>\n  </div>\n  \n    \n        \n  ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { Router } from '@angular/router';\nimport { AccountModel } from 'src/app/model/AccountModel';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmMessageDialogService } from 'src/app/services/dialog/confirm-message-dialog.service';\nimport { AccountService } from 'src/app/services/account.service';\nimport { MessageDialogService } from 'src/app/services/dialog/message-dialog.service';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  ELEMENT_DATA = new Array<AccountModel>();\n  dataSource: any;\n  user: any;\n  account: any;\n\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  displayedColumns: string[] = [\n    'accountId',\n    'accountType', \n    'amount',\n    'accountCreationTimeStamp',\n    'accountLastModifiedTimeStamp',\n    'operation'\n  ];\n\n  constructor(private transactionService: TransactionService, private accountService: AccountService, private router: Router, private confirmMessageDialog: ConfirmMessageDialogService, private messageDialog: MessageDialogService) {\n    this.loadUser();\n   }\n\n  ngOnInit(): void { \n  }\n\n  loadUser(){\n    this.user = this.transactionService.getUser().subscribe(\n      (success) => {\n        this.user = success;\n        \n        this.loadData(); \n      },\n      (err) => {\n        alert(err.error.message);\n      }\n    );\n  }\n\n  openAccount(){\n    this.router.navigate(['/addAccount']);\n  }\n\n  loadData(){ \n    this.accountService.getAccountsOfUser(this.user.userId).subscribe(\n      (success)=>{\n        this.account = success; \n        this.parseElement();\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\n        this.dataSource.sort = this.sort; \n        this.dataSource.paginator = this.paginator;\n      },\n      (err) => {\n        alert(\"Error on load account data : \"+err.error.message)\n      }\n    );\n    \n  }\n\n  parseElement(){ \n    var i = 0; \n    this.ELEMENT_DATA = new Array<AccountModel>();\n    for(let data of this.account){ \n      this.ELEMENT_DATA[i] = (new AccountModel(\n        data.accountId,\n        data.accountType,\n        data.amount,\n        data.associatedUserId,\n        data.accountCreationTimeStamp, \n        data.accountLastModifiedTimeStamp \n      ));\n        i++;\n    }\n\n  }\n\n  deleteAccount(data){ \n    if(data.amount > 0){\n      let options = {\n        title: 'Delete Account',\n        message1: \"This account is having money [ $\"+data.amount+\" ].\",\n        message2: \"Kindly transfer/consume money to delete account.\",\n        cancelText: 'Cancel',\n        confirmText: 'Delete'\n      };\n  \n      this.messageDialog.open(options) \n    }\n    else{\n      let options = {\n        title: 'Delete Account',\n        message1: \"Account will be deleted permanently!\",\n        message2: \"Do you really want to delete account?\",\n        cancelText: 'Cancel',\n        confirmText: 'Delete'\n      };\n\n      this.confirmMessageDialog.open(options) \n      this.confirmMessageDialog.confirmed().subscribe(confirmed => { \n        if (confirmed) {  \n            // Delete the record & refresh table list\n            this.accountService.deleteAccount(data.accountId).subscribe(\n              (success) => {\n                //this.refreshList();\n              },\n              (err) => {\n                let options = {\n                  title: 'Delete Account',\n                  message1: err.error.message,\n                  message2: \"\",\n                  cancelText: 'Cancel',\n                  confirmText: 'Delete'\n                };\n            \n                this.messageDialog.open(options) \n                this.refreshList();\n              }\n            );\n            \n      }\n      }); \n    }\n  }\n\n  refreshList(){\n    this.loadData(); \n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<div class=\"container\">\n    <mat-card class=\"header\"> \n        <mat-card-title>My Profile</mat-card-title>  \n    </mat-card> \n    <div class=\"col-md-12\">&nbsp;</div>\n    <div class=\"row\">\n    <table style=\"width: 90%;\" align=\"center\" >\n        <tr style=\"background-color: orange; color: white;\">\n            <th>User Name</th>\n            <th>Email</th>\n            <th>Mobile</th>\n            <th>Address</th>\n            <th>User Type</th>\n            <th>Status</th>\n            <th>Profile Created On</th> \n        </tr> \n        <tr>\n            <td>{{user.firstName+\" \"+user.lastName}}</td>\n            <td>{{user.email}}</td>\n            <td>{{user.mobile}}</td>\n            <td>{{user.address}}</td>\n            <td>{{user.userType}}</td>\n            <td>{{user.userStatus}}</td>\n            <td>{{user.profileCreationTimeStamp | date: 'fullDate'}}</td>\n        </tr>\n    </table>\n    </div>\n    <br>\n    <hr>\n    <br>\n    <div class=\"row\">\n    <span style=\"width: 100%; text-align: center;\"><h2>My Accounts</h2></span>\n    <span style=\"position: absolute; right: 15%;\">\n        <button mat-button (click)=\"openAccount()\" style=\"background-color: whitesmoke; color: black;\"> \n            <mat-icon matPrefix color=\"accent\">add</mat-icon>\n            <span>Add Account</span> \n        </button>\n    </span>\n    </div> \n    \n    <div class=\"row\"> \n        <mat-form-field class=\"search-text-full-width\" appearance=\"outline\">  \n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search screen ...\" #input>\n            <mat-icon matPrefix color=\"accent\">search&nbsp;</mat-icon> \n        </mat-form-field> \n        <table mat-table [dataSource]=\"dataSource\" matSort>\n         \n        <ng-container matColumnDef=\"accountId\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Account #</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.accountId}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"accountType\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Account Type</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.accountType}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"amount\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Amount Available</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.amount | currency: 'USD': 'symbol': '1.2-2'}} </span>\n            </td>\n        </ng-container> \n\n        <ng-container matColumnDef=\"accountCreationTimeStamp\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Created On</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.accountCreationTimeStamp}} </span>\n            </td> \n        </ng-container>\n\n        <ng-container matColumnDef=\"accountLastModifiedTimeStamp\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\" mat-sort-header>Last Modified</span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span class=\"truncate-text\">{{element.accountLastModifiedTimeStamp}} </span>\n            </td>\n        </ng-container>\n         \n        <ng-container matColumnDef=\"operation\">\n            <th mat-header-cell *matHeaderCellDef> \n                <span class=\"header-text\"> \n                     \n                </span>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"> \n                <span> \n                    <span matTooltip=\"Delete screen\">\n                        <button type=\"button\" mat-icon-button (click)=\"deleteAccount(element)\">\n                            <mat-icon color=\"accent\">delete</mat-icon>\n                        </button> \n                    </span>\n                </span>\n            </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true;\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr> \n        \n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n        </table>\n    </div>  \n<div class=\"row\">\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25]\" showFirstLastButtons></mat-paginator>\n        \n        <br>\n        <br>\n    </div>      \n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MessageDialogService } from 'src/app/services/dialog/message-dialog.service';\nimport { AccountService } from 'src/app/services/account.service';\nimport { TransactionModel } from 'src/app/model/TransactionModel';\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.css']\n})\nexport class TransferComponent implements OnInit {\n\n  transferForm: FormGroup; \n  transferGreetings: any; \n  user: any;\n  accounts: any;\n  transferData: any;\n\n  constructor(private formBuilder: FormBuilder, private dialogService: MessageDialogService, private accountService: AccountService) { \n\n   this.loadAccounts();\n   this.validateForm();\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  loadAccounts(){\n    let userId: string = sessionStorage.getItem(\"userId\"); \n    this.accountService.getAccountsOfUser(userId).subscribe(\n      (success) =>{\n        this.accounts = success; \n      },\n      (err) => {\n        alert(err.error.message);\n      }\n    );\n  }\n\n  validateForm(){\n    this.transferForm = this.formBuilder.group({\n      \"senderAccountId\": new FormControl('',Validators.required),\n      \"receiversAccountId\": new FormControl('',Validators.required), \n      \"amount\": new FormControl('', [Validators.required]), \n    });\n  }\n\n  doTransfer(){\n    let transaction: TransactionModel = new TransactionModel(\n      \n        \"\", //Will be generated by server\n        \"DIGITAL\",\n        this.transferForm.controls['senderAccountId'].value,\n        this.transferForm.controls['receiversAccountId'].value,\n        this.transferForm.controls['amount'].value,\n        sessionStorage.getItem(\"userId\"),\n        null,\n        \"\"\n    );\n\n    this.accountService.doTransfer(transaction).subscribe(\n      (success) => {\n        this.transferData = success; \n        let options = {\n          title: 'Transfer Money',\n          message1: \"Success!\",\n          message2: \"Transaction Id : \"+this.transferData.transactionId,\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n  \n        this.dialogService.open(options);\n        \n        this.dialogService.confirmed().subscribe(confirmed => {\n          if (confirmed) {\n              //alert(\"Jai Ram G ki\");\n              //After clicking Ok on message dialog, form should reset\n              this.transferForm.reset();\n            }\n          });\n      },\n      (err) => {\n        let options = {\n          title: 'Transaction - error',\n          message1: err.error.message,\n          message2: \"\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n        this.dialogService.open(options);\n      }\n    );\n\n  }\n\n\n}\n","<div class=\"container\">\n  \n    <form [formGroup]=\"transferForm\" (ngSubmit)=\"doTransfer()\">\n      <div class=\"row large-box mat-elevation-z3\" style=\"width: 100%;\">\n        <mat-card class=\"header\"> \n          <mat-card-title>Transfer amount</mat-card-title>  \n        </mat-card> \n        <div class=\"col-md-12\">&nbsp;</div> \n    <div class=\"col-md-6\">\n        <mat-form-field class=\"text-full-width\" appearance=\"fill\">\n            <mat-label>Select your account</mat-label>\n            <mat-select [formControl]=\"transferForm.controls['senderAccountId']\" required>\n                <mat-option>None</mat-option>\n                <mat-option *ngFor=\"let account of accounts\" [value]=\"account.accountId\" >{{account.accountId}}<span style=\"position: absolute; right: 5px;\">{{account.amount | currency: 'USD': 'symbol': '1.2-2'}}</span></mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div> \n\n    <div class=\"col-md-6\">\n    \n        <p>\n        <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n          <mat-label>Beneficiary account #</mat-label>\n          <input matInput placeholder=\"Beneficiar's account number\"  [formControl] = \"transferForm.controls['receiversAccountId']\"/>\n        </mat-form-field>\n        </p>\n    \n      </div>\n\n  <div class=\"col-md-6\">\n    \n    <p>\n    <mat-form-field class=\"text-full-width\" appearance=\"standard\">\n      <mat-label>Amount to be transfred</mat-label>\n      <input matInput type=\"number\" placeholder=\"Amount to be transfred\" name = \"initialValue\" [formControl] = \"transferForm.controls['amount']\"/>\n      <mat-icon matPrefix color=\"accent\">attach_money</mat-icon>\n    </mat-form-field>\n    </p>\n\n  </div>\n\n  <div class=\"col-md-12\"  style=\"align-content: left;\">\n    <span matTooltip=\"Transfer amount\">\n    <button type=\"submit\" mat-raised-button [disabled]=\"!transferForm.valid\">\n      <mat-icon color=\"accent\">send</mat-icon>\n      <span>Transfer</span>\n      \n    </button>\n    </span> \n  </div>\n\n    </div>\n</form>\n</div>","export class AccountModel{\n    constructor(\n        public accountId: string,\n        public accountType: string,\n        public amount: number,\n        public associatedUserId: string,\n        public accountCreationTimeStamp: string,\n        public accountLastModifiedTimeStamp: string\n    ){}\n}","export class LoginModel{\n    constructor(public username: string, public password: string){}\n}","export class TransactionModel{\n    constructor(\n        public transactionId: string,\n        public transactionType: string,\n        public senderAccountId: string,\n        public receiversAccountId: string,\n        public amount: number, \n        public associatedUserId: string,\n        public transactionStatus: string,\n        public transactionTimeStamp: string\n    ){}\n}","import { AccountModel } from './AccountModel';\n\nexport class UserModel{\n        constructor(\n        public userId: string,\n        public firstName: string,\n        public lastName: string,\n        public address: string,\n        public email: string,\n        public mobile: string,\n        public socialSecurityNumber: string, //using as a password - encrypted \n        public associatedAccounts: AccountModel,  //One user might have n number of accounts\n        public userType: string,\n        public userStatus: string, //To maintain delete(On delete - INACTIVE)\n        public profileCreationTimeStamp: string,\n        public profileLastModifiedTimeStamp: string\n    ){}\n}","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../services/security/authentication.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor{\n    constructor(private authService: AuthenticationService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n      /*  const authToken = this.authService.getToken();\n        req = req.clone({\n            setHeaders: {\n                Authorization: \"Bearer \" + authToken\n            }\n        });\n        return next.handle(req); */\n\n        if(this.authService.isUserLoggedIn()){\n            let token = this.authService.getToken();\n            \n            req = req.clone({\n                setHeaders:{\n                    Authorization: \"Bearer \" + token\n                }\n            });\n        }\n        return next.handle(req);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TransactionModel } from '../model/TransactionModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  \n  //ACCOUNT_URL: string = \"http://localhost:8765/lti-citi-app-account/api/account\";\n  ACCOUNT_URL: string = \"https://lti-citi-ag.herokuapp.com/lti-citi-app-account/api/account\";\n\n  //TRANSACTION_URL: string = \"http://localhost:8765/lti-citi-app-transaction/api/transaction/transfer\";\n  TRANSACTION_URL: string = \"https://lti-citi-ag.herokuapp.com/lti-citi-app-transaction/api/transaction/transfer\";\n\n  constructor(private http: HttpClient) { }\n\n  getAccountsOfUser(userId: string){\n    return this.http.get(this.ACCOUNT_URL+\"/getAll/\"+userId);\n  }\n\n  deleteAccount(accountId: string){\n    return this.http.delete(this.ACCOUNT_URL+\"/delete/\"+accountId);\n  }\n\n\n  doTransfer(data: TransactionModel){ \n    return this.http.post(this.TRANSACTION_URL, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { ConfirmMessageDialogComponent } from 'src/app/components/dialog/confirm-message-dialog/confirm-message-dialog.component';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmMessageDialogService {\n\n  constructor(private dialog: MatDialog, private http: HttpClient) { }\n\n  dialogRef: MatDialogRef<ConfirmMessageDialogComponent>;\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(ConfirmMessageDialogComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText \n      }\n });  \n  }  \n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MessageDialogComponent } from 'src/app/components/dialog/message-dialog/message-dialog.component';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageDialogService {\n\n  constructor(private dialog: MatDialog) { }\n\n  dialogRef: MatDialogRef<MessageDialogComponent>;\n\n  public open(options) {\n    this.dialogRef = this.dialog.open(MessageDialogComponent, {    \n      data: {\n        title: options.title,\n        message1: options.message1,\n        message2: options.message2,\n        cancelText: options.cancelText,\n        confirmText: options.confirmText\n      }\n    });  \n  }  \n  public confirmed(): Observable<any> {\n    return this.dialogRef.afterClosed().pipe(take(1), map(res => {\n      return res;\n    }\n  ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PingService {\n\n  /**\n   * As Heroku server sleeps in every 30 minutes. \n   * So that API goes down.\n   * To resolve this need to warm every microservices in withing 30 minutes.\n   */\n\n  ACCOUNT_URL: string = \"https://lti-citi-ag.herokuapp.com/lti-citi-app-account/api/account/message\";\n \n  TRANSACTION_URL: string = \"https://lti-citi-ag.herokuapp.com/lti-citi-app-transaction/api/transaction/message\";\n\n  PROFILE_URL: string = \"https://lti-citi-ag.herokuapp.com/lti-citi-app-user/api/user/message\";\n\n  constructor(private http: HttpClient) { }\n\n  getProfileUp(){\n    return this.http.get(this.PROFILE_URL);\n  }\n\n  getTransactionUp(){\n    return this.http.get(this.TRANSACTION_URL);\n  }\n\n  getAccountUp(){\n    return this.http.get(this.ACCOUNT_URL);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserModel } from 'src/app/model/UserModel';\nimport { AccountModel } from 'src/app/model/AccountModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  \n  //USER_REGISTER_URL: string = \"http://localhost:8765/register-user\";\n  USER_REGISTER_URL: string = \"https://lti-citi-ag.herokuapp.com/register-user\";\n\n  //ACCOUNT_REGISTER_URL: string = \"http://localhost:8765/lti-citi-app-account/api/account/create\";\n  ACCOUNT_REGISTER_URL: string = \"https://lti-citi-ag.herokuapp.com/lti-citi-app-account/api/account/create\";\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(data: UserModel){\n    return this.http.post(this.USER_REGISTER_URL, data);\n  }\n\n  createAccount(data: AccountModel){\n    return this.http.post(this.ACCOUNT_REGISTER_URL, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { LoginModel } from 'src/app/model/LoginModel';\nimport { MessageDialogService } from '../dialog/message-dialog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: any;\n\n  constructor(private loginService: UserService, private http: HttpClient, private router: Router, private dialogService: MessageDialogService) { }\n\n\n  doLogin(mobile: string, password: string){\n    let loginModel: LoginModel = new LoginModel(mobile, password);\n    this.loginService.doLogin(loginModel).subscribe(\n      (success) => {\n        this.user = success;\n        sessionStorage.setItem(\"userId\", this.user.userId);\n        sessionStorage.setItem(\"userName\", this.user.firstName+\" \"+this.user.lastName); \n        sessionStorage.setItem(\"userType\", this.user.userType);\n        sessionStorage.setItem(\"token\", this.user.token);\n \n         \n        this.router.navigate(['/transaction']);\n      },\n      (err) => { \n        let options = {\n          title: 'Login',\n          message1: err.error.message,\n          message2: \"Kindly login with valid Mobile Id & Social Security Number.\",\n          cancelText: 'Ok',\n          confirmText: 'Ok'\n        };\n   \n        this.dialogService.open(options);\n      }\n    );\n  }\n  doLogOut(){\n    sessionStorage.clear();\n    this.router.navigate(['/login']);\n  }\n\n  isUserLoggedIn(): boolean{\n    //If userId exist, means user is logged in\n    let token = sessionStorage.getItem(\"token\");\n     \n    if(token == null){\n      return false;\n    }\n    else{\n      return true;\n    } \n  }\n  isUserAdmin(): boolean{\n    let userType = sessionStorage.getItem(\"userType\"); \n    if(userType == \"ADMIN\"){  \n      return true;\n    }\n    else{\n      return false;\n    } \n  }\n  isUserSuperUser(): boolean{\n    let userType = sessionStorage.getItem(\"userType\"); \n    if(userType == \"SUPER_USER\"){ \n      return true;\n    }\n    else{\n      return false;\n    } \n  }\n\n  getToken() {\n    return sessionStorage.getItem(\"token\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionService {\n  \n  //PROFILE_URL: string = \"http://localhost:8765/lti-citi-app-user/api/user/get-by-userId\";\n  //TRANSACTION_URL: string = \"http://localhost:8765/lti-citi-app-transaction/api/transaction/get-all\";\n\n  PROFILE_URL: string = \"https://lti-citi-ag.herokuapp.com/lti-citi-app-user/api/user/get-by-userId\";\n  TRANSACTION_URL: string = \"https://lti-citi-ag.herokuapp.com/lti-citi-app-transaction/api/transaction/get-all\";\n\n  constructor(private http: HttpClient) { }\n\n  getUser(){\n    return this.http.get(this.PROFILE_URL+\"/\"+sessionStorage.getItem(\"userId\"));\n  }\n\n  getAllTransaction(userId: string){\n    return this.http.get(this.TRANSACTION_URL+\"/\"+userId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginModel } from '../model/LoginModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  //LOGIN_URL: string = \"http://localhost:8765/authenticate\";\n\n  LOGIN_URL: string = \"https://lti-citi-ag.herokuapp.com/authenticate\";\n\n  constructor(private http: HttpClient) { }\n\n  doLogin(data: LoginModel){\n    //return this.http.post(this.LOGIN_URL+\"/login\",data);\n    return this.http.post(this.LOGIN_URL,data);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}